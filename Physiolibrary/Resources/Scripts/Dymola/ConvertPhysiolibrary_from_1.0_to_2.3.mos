// Convert from Physiolibrary 1.0 to Physiolibrary 2.3

// clear
convertClear();



//Chemical

convertClass("Physiolibrary.Chemical.Substance","Physiolibrary.Chemical.Components.Substance")
convertModifiers("Physiolibrary.Chemical.Substance", fill("",0)  , {"useNormalizedVolume=false"}, true);
convertElement("Physiolibrary.Chemical.Substance","solventVolume","solutionVolume");
convertClass("Physiolibrary.Chemical.NormalizedSubstance","Physiolibrary.Chemical.Components.Substance")
convertElement("Physiolibrary.Chemical.NormalizedSubstance","solventVolume","solutionVolume");
convertClass("Physiolibrary.Chemical.ChemicalReaction","Physiolibrary.Chemical.Components.ChemicalReaction")
convertElement("Physiolibrary.Chemical.ChemicalReaction","solventVolume","solutionVolume");
convertClass("Physiolibrary.Chemical.ChemicalReaction2","Physiolibrary.Chemical.Components.ChemicalReaction")
convertModifiers("Physiolibrary.Chemical.ChemicalReaction2", fill("",0)  , {"useHeatPort=true"}, true);
convertElement("Physiolibrary.Chemical.ChemicalReaction2","solventVolume","solutionVolume");
convertClass("Physiolibrary.Chemical.ChemicalReaction3","Physiolibrary.Chemical.Components.ChemicalReaction")
convertModifiers("Physiolibrary.Chemical.ChemicalReaction3", fill("",0)  , {"useHeatPort=true","useDissociationConstantInput=true"}, true);
convertElement("Physiolibrary.Chemical.ChemicalReaction3","K","dissociationConstant")
convertElement("Physiolibrary.Chemical.ChemicalReaction3","solventVolume","solutionVolume");
convertClass("Physiolibrary.Chemical.Diffusion","Physiolibrary.Chemical.Components.Diffusion")
convertClass("Physiolibrary.Chemical.GasSolubility","Physiolibrary.Chemical.Components.GasSolubility")
convertModifiers("Physiolibrary.Chemical.GasSolubility",{"kH_T0"}  , {"kH_T0=1/%kH_T0%"}, true);
convertClass("Physiolibrary.Chemical.GasSolubility2","Physiolibrary.Chemical.Components.GasSolubility")
convertModifiers("Physiolibrary.Chemical.GasSolubility2", fill("",0)  , {"useHeatPort=true"}, true);
convertModifiers("Physiolibrary.Chemical.GasSolubility2",{"kH_T0"}  , {"kH_T0=1/%kH_T0%","useHeatPort=true"}, true);
convertClass("Physiolibrary.Chemical.Degradation","Physiolibrary.Chemical.Components.Degradation")
convertModifiers("Physiolibrary.Chemical.Degradation", fill("",0)  , {"useNormalizedVolume=false"}, true);
convertElement("Physiolibrary.Chemical.Degradation","volume","solutionVolume");
convertClass("Physiolibrary.Chemical.Clearance","Physiolibrary.Chemical.Components.Clearance")
convertElement("Physiolibrary.Chemical.Clearance","useSolventFlow","useSolutionFlowInput");
convertElement("Physiolibrary.Chemical.Clearance","solventFlow","solutionFlow");
convertClass("Physiolibrary.Chemical.Clearance2","Physiolibrary.Chemical.Components.Clearance")
convertModifiers("Physiolibrary.Chemical.Clearance2", fill("",0)  , {"useSolventFlow=true"}, true);
convertElement("Physiolibrary.Chemical.Clearance2","useSolventFlow","useSolutionFlowInput");
convertElement("Physiolibrary.Chemical.Clearance2","solventFlow","solutionFlow");
convertClass("Physiolibrary.Chemical.MolarStream","Physiolibrary.Chemical.Components.Stream")
convertModifiers("Physiolibrary.Chemical.MolarStream", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Chemical.MolarStream","solventFlow","solutionFlow")
convertClass("Physiolibrary.Chemical.SoluteFlowPump","Physiolibrary.Chemical.Components.SolutePump")
convertModifiers("Physiolibrary.Chemical.SoluteFlowPump", fill("",0)  , {"useSoluteFlowInput=true"}, true);
convertClass("Physiolibrary.Chemical.Examples.Speciation.SubunitSpeciation","Physiolibrary.Chemical.Components.Speciation")
convertClass("Physiolibrary.Chemical.Dilution","Physiolibrary.Chemical.Components.Dilution")
convertModifiers("Physiolibrary.Chemical.Dilution", fill("",0)  , {"useDilutionInput=true"}, true);
convertClass(  "Physiolibrary.Chemical.Reabsorbtion","Physiolibrary.Chemical.Components.Reabsorption")
convertElement("Physiolibrary.Chemical.Reabsorbtion","ReabsorbedFract","baseReabsorption")
convertElement("Physiolibrary.Chemical.Reabsorbtion","Effects","Effect")
convertElement("Physiolibrary.Chemical.Reabsorbtion","Reabsorbtion","Reabsorption")
convertClass(    "Physiolibrary.Chemical.Reabsorbtion2","Physiolibrary.Chemical.Components.Reabsorption")
convertModifiers("Physiolibrary.Chemical.Reabsorbtion2", fill("",0) , {"useEffect=true","useBaseReabsorption=true","useMaxReabInput=true"}, true);
convertElement(  "Physiolibrary.Chemical.Reabsorbtion2","Normal","baseReabsorption")
convertElement("Physiolibrary.Chemical.Reabsorbtion2","Reabsorbtion","Reabsorption")
convertClass("Physiolibrary.Chemical.FullReabsorbtion","Physiolibrary.Chemical.Components.Reabsorption")
convertElement("Physiolibrary.Chemical.FullReabsorbtion","MaxReab","MaxReabsorption")
convertElement("Physiolibrary.Chemical.FullReabsorbtion","Reabsorbtion","Reabsorption")


convertClass("Physiolibrary.Chemical.ConcentrationMeasure","Physiolibrary.Chemical.Sensors.ConcentrationMeasure")
convertElement("Physiolibrary.Chemical.ConcentrationMeasure","actualConc","concentration");
convertClass("Physiolibrary.Chemical.FlowConcentrationMeasure","Physiolibrary.Chemical.Sensors.IncrementalFlowConcentrationMeasure")
convertElement("Physiolibrary.Chemical.FlowConcentrationMeasure","solventFlow","solutionFlow");
convertElement("Physiolibrary.Chemical.FlowConcentrationMeasure","SolventFlow","solutionFlow");
convertElement("Physiolibrary.Chemical.FlowConcentrationMeasure","Conc","concentration");
convertClass("Physiolibrary.Chemical.FlowMeasure","Physiolibrary.Chemical.Sensors.MolarFlowMeasure")
convertElement("Physiolibrary.Chemical.FlowMeasure","actualFlow","molarFlowRate");


convertClass("Physiolibrary.Chemical.MolarInflux","Physiolibrary.Chemical.Sources.UnlimitedSolutePump")
convertModifiers("Physiolibrary.Chemical.MolarInflux", fill("",0) , {"useSoluteFlowInput=true"}, true);
convertElement("Physiolibrary.Chemical.MolarInflux","desiredFlow","soluteFlow")
convertClass("Physiolibrary.Chemical.UnlimitedStorage","Physiolibrary.Chemical.Sources.UnlimitedSolutionStorage")

convertClass("Physiolibrary.Chemical.ConcentrationFlow","Physiolibrary.Chemical.Interfaces.ChemicalPort")
convertClass("Physiolibrary.Chemical.PositiveConcentrationFlow","Physiolibrary.Chemical.Interfaces.ChemicalPort_a")
convertClass("Physiolibrary.Chemical.NegativeConcentrationFlow","Physiolibrary.Chemical.Interfaces.ChemicalPort_b")
convertClass("Physiolibrary.Chemical.OnePort","Physiolibrary.Chemical.Interfaces.OnePort")

// Hydraulic

convertClass("Physiolibrary.Hydraulic.Resistor","Physiolibrary.Hydraulic.Components.Conductor")
convertElement("Physiolibrary.Hydraulic.Resistor","cond","Conductance")
convertClass("Physiolibrary.Hydraulic.Resistor2","Physiolibrary.Hydraulic.Components.Conductor")
convertModifiers("Physiolibrary.Hydraulic.Resistor2", fill("",0)  , {"useConductanceInput=true"}, true);
convertClass("Physiolibrary.Hydraulic.ElacticBalloon","Physiolibrary.Hydraulic.Components.ElasticVessel")
convertElement("Physiolibrary.Hydraulic.ElacticBalloon","zeroPressureVolume","ZeroPressureVolume")
convertElement("Physiolibrary.Hydraulic.ElacticBalloon","compliance","Compliance")
convertElement("Physiolibrary.Hydraulic.ElacticBalloon","externalPressure","ExternalPressure")
convertClass("Physiolibrary.Hydraulic.ElacticBalloon2","Physiolibrary.Hydraulic.Components.ElasticVessel")
convertModifiers("Physiolibrary.Hydraulic.ElacticBalloon2", fill("",0)  , {"useV0Input=true","useComplianceInput=true","useExternalPressureInput=true"}, true);
convertClass("Physiolibrary.Hydraulic.Pump","Physiolibrary.Hydraulic.Components.Pump")
convertModifiers("Physiolibrary.Hydraulic.Pump", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Hydraulic.Pump","desiredFlow","solutionFlow")
convertClass("Physiolibrary.Hydraulic.Hydrostatic","Physiolibrary.Hydraulic.Components.HydrostaticColumn")
convertModifiers("Physiolibrary.Hydraulic.Hydrostatic", fill("",0)  , {"useHeightInput=true"}, true);
convertElement("Physiolibrary.Hydraulic.Hydrostatic","G","GravityAcceleration")
convertClass("Physiolibrary.Hydraulic.Hydrostatic2","Physiolibrary.Hydraulic.Components.HydrostaticColumn")
convertModifiers("Physiolibrary.Hydraulic.Hydrostatic2", fill("",0)  , {"useHeightInput=true","useExternalG=true"}, true);
convertClass("Physiolibrary.Hydraulic.HydrostaticWithPumpEffect","Physiolibrary.Hydraulic.Components.HydrostaticColumn")
convertModifiers("Physiolibrary.Hydraulic.HydrostaticWithPumpEffect", fill("",0)  , {"useHeightInput=true","useExternalG=true","usePumpEffect=true"}, true);
convertClass("Physiolibrary.Hydraulic.InternalElasticBalloon","Physiolibrary.Hydraulic.Components.ElasticMembrane")
convertClass("Physiolibrary.Hydraulic.Inertia","Physiolibrary.Hydraulic.Components.Inertia")
convertClass("Physiolibrary.Hydraulic.Reabsorbtion","Physiolibrary.Hydraulic.Components.Reabsorption")
convertElement("Physiolibrary.Hydraulic.Reabsorbtion","Reabsorbtion","Reabsorption")
convertClass("Physiolibrary.Hydraulic.Reabsorbtion2","Physiolibrary.Hydraulic.Components.Reabsorption")
convertModifiers("Physiolibrary.Hydraulic.Reabsorbtion2", fill("",0)  , {"useExternalOutflowMin=true"}, true);
convertElement("Physiolibrary.Hydraulic.Reabsorbtion2","OutflowMin","outflowMin")
convertElement("Physiolibrary.Hydraulic.Reabsorbtion2","Reabsorbtion","Reabsorption")
convertElement("Physiolibrary.Hydraulic.Reabsorbtion2","reabsorbtion","reabsorption")


convertClass("Physiolibrary.Hydraulic.FlowMeasure","Physiolibrary.Hydraulic.Sensors.FlowMeasure")
convertElement("Physiolibrary.Hydraulic.FlowMeasure","actualFlow","volumeFlow");
convertClass("Physiolibrary.Hydraulic.PressureMeasure","Physiolibrary.Hydraulic.Sensors.PressureMeasure")
convertElement("Physiolibrary.Hydraulic.PressureMeasure","actualPressure","pressure");

convertClass("Physiolibrary.Hydraulic.InputPump","Physiolibrary.Hydraulic.Sources.UnlimitedPump")
convertModifiers("Physiolibrary.Hydraulic.InputPump", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Hydraulic.InputPump","desiredFlow","solutionFlow")
convertClass("Physiolibrary.Hydraulic.OutputPump","Physiolibrary.Hydraulic.Sources.UnlimitedPump")
convertModifiers("Physiolibrary.Hydraulic.OutputPump", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Hydraulic.OutputPump","desiredFlow","-solutionFlow")
convertElement("Physiolibrary.Hydraulic.OutputPump","q_in","q_out")
convertClass("Physiolibrary.Hydraulic.UnlimitedVolume","Physiolibrary.Hydraulic.Sources.UnlimitedVolume")
convertModifiers("Physiolibrary.Hydraulic.UnlimitedVolume", fill("",0)  , {"usePressureInput=true"}, true);

convertClass("Physiolibrary.Hydraulic.PressureFlow","Physiolibrary.Hydraulic.Interfaces.HydraulicPort")
convertClass("Physiolibrary.Hydraulic.PositivePressureFlow","Physiolibrary.Hydraulic.Interfaces.HydraulicPort_a")
convertClass("Physiolibrary.Hydraulic.NegativePressureFlow","Physiolibrary.Hydraulic.Interfaces.HydraulicPort_b")
convertClass("Physiolibrary.Hydraulic.OnePort","Physiolibrary.Hydraulic.Interfaces.OnePort")

//Thermal

convertClass("Physiolibrary.Thermal.UnlimitedHeat","Physiolibrary.Thermal.Sources.UnlimitedHeat")
convertElement("Physiolibrary.Thermal.UnlimitedHeat","Temperature","T")
convertElement("Physiolibrary.Thermal.UnlimitedHeat","q_in","port");

convertClass("Physiolibrary.Thermal.HeatInflux","Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow")
convertElement("Physiolibrary.Thermal.HeatInflux","desiredFlow_","Q_flow")
convertElement("Physiolibrary.Thermal.HeatInflux","q_out","port")

convertClass("Physiolibrary.Thermal.Conductor","Physiolibrary.Thermal.Components.Conductor")
convertClass("Physiolibrary.Thermal.Conductor2","Physiolibrary.Thermal.Components.Conductor")
convertModifiers("Physiolibrary.Thermal.Conductor2", fill("",0)  , {"useConductanceInput=true"}, true);
convertElement({"Physiolibrary.Thermal.Conductor"},"conductance","Conductance")
convertClass("Physiolibrary.Thermal.HeatStream","Physiolibrary.Thermal.Components.Stream")
convertModifiers("Physiolibrary.Thermal.HeatStream", fill("",0)  , {"useMassFlowInput=true"}, true);
convertElement("Physiolibrary.Thermal.HeatStream","substanceFlow","massFlow")
convertElement({"Physiolibrary.Thermal.HeatStream"},"specificHeat_","SpecificHeat")
convertClass("Physiolibrary.Thermal.HeatOutstream","Physiolibrary.Thermal.Sources.MassOutflow")
convertModifiers("Physiolibrary.Thermal.HeatOutstream", fill("",0)  , {"useMassFlowInput=true"}, true);
convertElement("Physiolibrary.Thermal.HeatOutstream","liquidOutflow_","massFlow")
convertElement({"Physiolibrary.Thermal.HeatOutStream"},"specificHeat_","SpecificHeat")
convertClass("Physiolibrary.Thermal.IdealRadiator","Physiolibrary.Thermal.Components.IdealRadiator")
convertModifiers("Physiolibrary.Thermal.IdealRadiator", fill("",0)  , {"useMassFlowInput=true"}, true);
convertElement("Physiolibrary.Thermal.IdealRadiator","substanceFlow","massFlow")
convertClass("Physiolibrary.Thermal.HeatAccumulation0","Physiolibrary.Thermal.Components.HeatAccumulation")
convertClass("Physiolibrary.Thermal.HeatAccumulation","Physiolibrary.Thermal.Components.HeatAccumulation")
convertModifiers("Physiolibrary.Thermal.HeatAccumulation", fill("",0)  , {"useMassInput=true"}, true);
convertElement({"Physiolibrary.Thermal.HeatAccumulation0"},"heatStart","relativeHeat_start")
convertElement({"Physiolibrary.Thermal.HeatAccumulation"},"heatStart","relativeHeat_start")
convertElement({"Physiolibrary.Thermal.HeatAccumulation0"},"heatMass","relativeHeat")
convertElement({"Physiolibrary.Thermal.HeatAccumulation"},"heatMass","relativeHeat")
convertElement({"Physiolibrary.Thermal.HeatAccumulation0"},"specificHeat_","SpecificHeat")
convertElement({"Physiolibrary.Thermal.HeatAccumulation"},"specificHeat_","SpecificHeat")
convertElement({"Physiolibrary.Thermal.HeatAccumulation0"},"T_","T")
convertElement({"Physiolibrary.Thermal.HeatAccumulation"},"T_","T")
convertElement({"Physiolibrary.Thermal.HeatAccumulation0"},"weight","Weight")

convertClass("Physiolibrary.Thermal.HeatFlowConnector","Physiolibrary.Thermal.Interfaces.HeatPort")
convertElement("Physiolibrary.Thermal.HeatFlowConnector","q","Q_flow")
convertClass("Physiolibrary.Thermal.PositiveHeatFlow","Physiolibrary.Thermal.Interfaces.HeatPort_a")
convertClass("Physiolibrary.Thermal.NegativeHeatFlow","Physiolibrary.Thermal.Interfaces.HeatPort_b")
convertClass("Physiolibrary.Thermal.OnePort","Physiolibrary.Thermal.Interfaces.OnePort")


// Osmotic

convertClass("Physiolibrary.Osmotic.OsmoticCell","Physiolibrary.Osmotic.Components.OsmoticCell")
convertModifiers("Physiolibrary.Osmotic.OsmoticCell", fill("",0)  , {"useImpermeableSolutesInput=true"}, true);
convertElement("Physiolibrary.Osmotic.OsmoticCell","q_in","q_in[1]");
convertElement("Physiolibrary.Osmotic.OsmoticCell","impermeableSolutes","impermeableSolutes[1]");

convertClass("Physiolibrary.Osmotic.Membrane","Physiolibrary.Osmotic.Components.Membrane")
convertElement("Physiolibrary.Osmotic.Membrane","temperature","T")
convertClass("Physiolibrary.Osmotic.Membrane2","Physiolibrary.Osmotic.Components.Membrane2")
convertModifiers("Physiolibrary.Osmotic.Membrane2", fill("",0)  , {"useHydraulicPressureInputs=true"}, true);
convertElement("Physiolibrary.Osmotic.Membrane2","temperature","T")
convertClass("Physiolibrary.Osmotic.Membrane3","Physiolibrary.Osmotic.Components.Membrane3")
convertModifiers("Physiolibrary.Osmotic.Membrane3", fill("",0)  , {"useHydraulicPressureInputs=true","useTemperatureInputs=true"}, true);
convertClass("Physiolibrary.Osmotic.SolventFlux","Physiolibrary.Osmotic.Components.SolventFlux")
convertModifiers("Physiolibrary.Osmotic.SolventFlux", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Osmotic.SolventFlux","desiredFlow","solutionFlow")

convertClass("Physiolibrary.Osmotic.FlowMeasure","Physiolibrary.Osmotic.Sensors.FlowMeasure")
convertElement("Physiolibrary.Osmotic.FlowMeasure","actualFlow","volumeFlowRate");

convertClass("Physiolibrary.Osmotic.SolventInflux","Physiolibrary.Osmotic.Sources.SolventInflux")
convertModifiers("Physiolibrary.Osmotic.Sources.SolventInflux", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Osmotic.Sources.SolventInflux","desiredFlow","solutionFlow")
convertClass("Physiolibrary.Osmotic.SolventOutflux","Physiolibrary.Osmotic.Sources.SolventOutflux")
convertModifiers("Physiolibrary.Osmotic.Sources.SolventOutflux", fill("",0)  , {"useSolutionFlowInput=true"}, true);
convertElement("Physiolibrary.Osmotic.Sources.SolventOutflux","desiredFlow","solutionFlow")

convertClass("Physiolibrary.Osmotic.OsmoticFlowConnector","Physiolibrary.Osmotic.Interfaces.OsmoticPort")
convertClass("Physiolibrary.Osmotic.PositiveOsmoticFlow","Physiolibrary.Osmotic.Interfaces.OsmoticPort_a")
convertClass("Physiolibrary.Osmotic.NegativeOsmoticFlow","Physiolibrary.Osmotic.Interfaces.OsmoticPort_b")
convertClass("Physiolibrary.Osmotic.OnePort","Physiolibrary.Osmotic.Interfaces.OnePort")


// SteadyStates

convertClass("Physiolibrary.States","Physiolibrary.SteadyStates")

convertClass("Physiolibrary.States.State","Physiolibrary.SteadyStates.Interfaces.SteadyState")
convertClass("Physiolibrary.States.StateSystem","Physiolibrary.SteadyStates.Interfaces.SteadyStateSystem")


convertClass("Physiolibrary.States.Examples.SimpleAddaptation_NoInit","Physiolibrary.SteadyStates.Examples.SimpleAdaptation_NoInit")
convertClass("Physiolibrary.States.Examples.SimpleAddaptation_InitSteadyState","Physiolibrary.SteadyStates.Examples.SimpleAdaptation_InitSteadyState")
convertClass("Physiolibrary.States.Examples.SimpleAddaptation_InitialInput","Physiolibrary.SteadyStates.Examples.SimpleAdaptation_InitialInput")
convertClass("Physiolibrary.States.Examples.SimpleAddaptation_Equilibrated","Physiolibrary.SteadyStates.Examples.SimpleAdaptation_Equilibrated")


// Icons

convertClass("Physiolibrary.Icons.Reabsorbtion","Physiolibrary.Icons.Reabsorption")
convertClass("Physiolibrary.Icons.Reabsorbtion2","Physiolibrary.Icons.Reabsorption2")

convertClass("Physiolibrary.Icons.MidleTorso","Physiolibrary.Icons.MiddleTorso")
convertClass("Physiolibrary.Icons.Carbondioxyd","Physiolibrary.Icons.CarbonDioxide")

convertClass("Physiolibrary.Icons.ConcentrationCompartment","Physiolibrary.Icons.Substance")
convertClass("Physiolibrary.Icons.FractionalConcentration","Physiolibrary.Icons.Speciation")
convertClass("Physiolibrary.Icons.BloodElasticCompartment","Physiolibrary.Icons.ElasticBalloon")


// Types

convertClass("Physiolibrary.States.SimulationType","Physiolibrary.Types.SimulationType")
convertElement("Physiolibrary.States.SimulationType","Equilibrated","SteadyState")
convertElement("Physiolibrary.States.SimulationType","InitialInput","ReadInit")

convertClass("Physiolibrary.FileUtilities","Physiolibrary.Types.FileUtilities")
convertClass("Physiolibrary.FileUtilities.readInputReal","Physiolibrary.Types.FileUtilities.readReal")
convertClass("Physiolibrary.FileUtilities.readInputBoolean","Physiolibrary.Types.FileUtilities.readBoolean")
convertClass("Physiolibrary.FileUtilities.writeComparation","Physiolibrary.Types.FileUtilities.writeComparison")
convertClass("Physiolibrary.FileUtilities.writeBooleanComparation","Physiolibrary.Types.FileUtilities.writeBooleanComparison")
convertClass("Physiolibrary.Types.Utilities.readInputReal","Physiolibrary.Types.Utilities.readReal")
convertClass("Physiolibrary.Types.Utilities.readInputBoolean","Physiolibrary.Types.Utilities.readBoolean")
convertClass("Physiolibrary.Types.Utilities.writeComparation","Physiolibrary.Types.Utilities.writeComparison")
convertClass("Physiolibrary.Types.Utilities.writeBooleanComparation","Physiolibrary.Types.Utilities.writeBooleanComparison")


// Blocks

convertClass("Physiolibrary.Blocks.Math.Pow","Physiolibrary.Blocks.Math.Power")
convertClass("Physiolibrary.Blocks.Math.Pow2","Physiolibrary.Blocks.Math.Power")
convertModifiers("Physiolibrary.Blocks.Math.Pow2", fill("",0)  , {"useBaseInput=true"}, true);
convertClass("Physiolibrary.Blocks.Math.MultiProduct","Modelica.Blocks.Math.MultiProduct")

convertClass("Physiolibrary.Blocks.Curves","Physiolibrary.Blocks.Interpolation")
convertClass("Physiolibrary.Blocks.Curves.SplineCoeficient","Physiolibrary.Blocks.Interpolation.SplineCoefficient")

convertClass("Physiolibrary.Blocks.Factors.Effect","Physiolibrary.Blocks.Factors.Normalization")
convertClass("Physiolibrary.Blocks.Factors.Input2Effect","Physiolibrary.Blocks.Factors.Spline")
convertClass("Physiolibrary.Blocks.Factors.Input2EffectDelayed","Physiolibrary.Blocks.Factors.SplineLag")
convertClass("Physiolibrary.Blocks.Factors.DelayedInput2Effect","Physiolibrary.Blocks.Factors.LagSpline")
convertClass("Physiolibrary.Blocks.Factors.Input2EffectDelayedOrZero","Physiolibrary.Blocks.Factors.SplineLagOrZero")
