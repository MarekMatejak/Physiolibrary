// Convert from Physiolibrary 0.4934 (svn commit number 4934 in old http://patf-biokyb.lf1.cuni.cz/repos/Modelica/Physiolibrary) to Physiolibrary 1.2

// clear
convertClear();

convertClass("Physiolibrary.Icons.Reabsorbtion","Physiolibrary.Icons.Reabsorption");
convertClass("Physiolibrary.Icons.Reabsorbtion2","Physiolibrary.Icons.Reabsorption2");
convertElement("Physiolibrary.Hydraulic.Reabsorbtion","Reabsorbtion","Reabsorption");
convertElement("Physiolibrary.Hydraulic.Reabsorbtion2","Reabsorbtion","Reabsorption");
convertElement("Physiolibrary.Hydraulic.Reabsorbtion2","reabsorbtion","reabsorption");
convertElement("Physiolibrary.Chemical.Reabsorbtion","Reabsorbtion","Reabsorption");
convertElement("Physiolibrary.Chemical.Reabsorbtion2","Reabsorbtion","Reabsorption");
convertElement("Physiolibrary.Chemical.FullReabsorbtion","Reabsorbtion","Reabsorption");

convertClass("Physiolibrary.Blocks.Curves.SplineCoeficient","Physiolibrary.Blocks.Curves.SplineCoefficient");

convertClass("Physiolibrary.FileUtilities.readInputReal","Physiolibrary.FileUtilities.readReal");
convertClass("Physiolibrary.FileUtilities.readInputBoolean","Physiolibrary.FileUtilities.readBoolean");
convertClass("Physiolibrary.FileUtilities.writeComparation","Physiolibrary.FileUtilities.writeComparison");
convertClass("Physiolibrary.FileUtilities.writeBooleanComparation","Physiolibrary.FileUtilities.writeBooleanComparison");
convertClass("Physiolibrary.Types.Utilities.readInputReal","Physiolibrary.Types.Utilities.readReal");
convertClass("Physiolibrary.Types.Utilities.readInputBoolean","Physiolibrary.Types.Utilities.readBoolean");
convertClass("Physiolibrary.Types.Utilities.writeComparation","Physiolibrary.Types.Utilities.writeComparison");
convertClass("Physiolibrary.Types.Utilities.writeBooleanComparation","Physiolibrary.Types.Utilities.writeBooleanComparison");

convertClass("Physiolibrary.States.Examples.SimpleAddaptation_NoInit","Physiolibrary.States.Examples.SimpleAdaptation_NoInit");
convertClass("Physiolibrary.States.Examples.SimpleAddaptation_InitSteadyState","Physiolibrary.States.Examples.SimpleAdaptation_InitSteadyState");
convertClass("Physiolibrary.States.Examples.SimpleAddaptation_InitialInput","Physiolibrary.States.Examples.SimpleAdaptation_InitialInput");
convertClass("Physiolibrary.States.Examples.SimpleAddaptation_Equilibrated","Physiolibrary.States.Examples.SimpleAdaptation_Equilibrated");

convertClass("Physiolibrary.Icons.MidleTorso","Physiolibrary.Icons.MiddleTorso");
convertClass("Physiolibrary.Icons.Carbondioxyd","Physiolibrary.Icons.CarbonDioxide");

convertElement("Physiolibrary.Thermal.HeatFlowConnector","q","Q_flow");

convertClass("Physiolibrary.Icons.ConcentrationCompartment","Physiolibrary.Icons.Substance");
convertClass("Physiolibrary.Icons.FractionalConcentration","Physiolibrary.Icons.Speciation");
convertClass("Physiolibrary.Icons.BloodElasticCompartment","Physiolibrary.Icons.ElasticBalloon");

convertElement("Physiolibrary.Thermal.UnlimitedHeat","Temperature","T");
convertElement("Physiolibrary.Thermal.UnlimitedHeat","Simulation","");
convertClass("Physiolibrary.Thermal.UnlimitedHeat","Modelica.Thermal.HeatTransfer.Sources.FixedTemperature");

convertElement("Physiolibrary.Thermal.HeatInflux","desiredFlow_","Q_flow");
convertElement("Physiolibrary.Thermal.HeatInflux","q_out","port");
convertClass("Physiolibrary.Thermal.HeatInflux","Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow");

convertClass("Physiolibrary.Chemical.Examples.Speciation.SubunitSpeciation","Physiolibrary.Chemical.Speciation");


convertClass("Physiolibrary.Chemical.Examples.Speciation.SubunitSpeciation","Physiolibrary.Chemical.Components.Speciation");
convertClass("Physiolibrary.Chemical.Diffusion","Physiolibrary.Chemical.Components.Diffusion");
convertClass("Physiolibrary.Chemical.MolarStream","Physiolibrary.Chemical.Components.MolarStream");
convertClass("Physiolibrary.Chemical.Clearance","Physiolibrary.Chemical.Components.Clearance");
convertClass("Physiolibrary.Chemical.Degradation","Physiolibrary.Chemical.Components.Degradation");
convertClass("Physiolibrary.Chemical.SoluteFlowPump","Physiolibrary.Chemical.Components.SoluteFlowPump");
convertClass("Physiolibrary.Chemical.Substance","Physiolibrary.Chemical.Components.Substance");
convertClass("Physiolibrary.Chemical.NormalizedSubstance","Physiolibrary.Chemical.Components.NormalizedSubstance");
convertClass("Physiolibrary.Chemical.ChemicalReactionBase","Physiolibrary.Chemical.Components.ChemicalReactionBase");
convertClass("Physiolibrary.Chemical.ChemicalReaction","Physiolibrary.Chemical.Components.ChemicalReaction");
convertClass("Physiolibrary.Chemical.ChemicalReaction2","Physiolibrary.Chemical.Components.ChemicalReaction2");
convertClass("Physiolibrary.Chemical.ChemicalReaction3","Physiolibrary.Chemical.Components.ChemicalReaction3");
convertClass("Physiolibrary.Chemical.GasSolubility","Physiolibrary.Chemical.Components.GasSolubility");
convertClass("Physiolibrary.Chemical.GasSolubility2","Physiolibrary.Chemical.Components.GasSolubility2");
convertClass("Physiolibrary.Chemical.Dilution","Physiolibrary.Chemical.Components.Dilution");
convertClass("Physiolibrary.Chemical.Reabsorbtion","Physiolibrary.Chemical.Components.Reabsorption");
convertClass("Physiolibrary.Chemical.Reabsorbtion2","Physiolibrary.Chemical.Components.Reabsorption2");
convertClass("Physiolibrary.Chemical.FullReabsorbtion","Physiolibrary.Chemical.Components.FullReabsorption");
convertClass("Physiolibrary.Chemical.MichaelisMenten","Physiolibrary.Chemical.Components.MichaelisMenten");
convertClass("Physiolibrary.Chemical.FlowMeasure","Physiolibrary.Chemical.Sensors.FlowMeasure");
convertClass("Physiolibrary.Chemical.ConcentrationMeasure","Physiolibrary.Chemical.Sensors.ConcentrationMeasure");
convertClass("Physiolibrary.Chemical.FlowConcentrationMeasure","Physiolibrary.Chemical.Sensors.FlowConcentrationMeasure");
convertClass("Physiolibrary.Chemical.MolarInflux","Physiolibrary.Chemical.Sources.MolarInflux");
convertClass("Physiolibrary.Chemical.UnlimitedStorage","Physiolibrary.Chemical.Sources.UnlimitedStorage");
convertClass("Physiolibrary.Chemical.ConcentrationFlow","Physiolibrary.Chemical.Interfaces.ConcentrationFlow");
convertClass("Physiolibrary.Chemical.PositiveConcentrationFlow","Physiolibrary.Chemical.Interfaces.PositiveConcentrationFlow");
convertClass("Physiolibrary.Chemical.NegativeConcentrationFlow","Physiolibrary.Chemical.Interfaces.NegativeConcentrationFlow");
convertClass("Physiolibrary.Chemical.OnePort","Physiolibrary.Chemical.Interfaces.OnePort");

convertClass("Physiolibrary.Hydraulic.Resistor","Physiolibrary.Hydraulic.Components.Resistor");
convertClass("Physiolibrary.Hydraulic.Resistor2","Physiolibrary.Hydraulic.Components.Resistor2");
convertClass("Physiolibrary.Hydraulic.Pump","Physiolibrary.Hydraulic.Components.Pump");
convertClass("Physiolibrary.Hydraulic.Reabsorbtion","Physiolibrary.Hydraulic.Components.Reabsorption");
convertClass("Physiolibrary.Hydraulic.Reabsorbtion2","Physiolibrary.Hydraulic.Components.Reabsorption2");
convertClass("Physiolibrary.Hydraulic.Hydrostatic","Physiolibrary.Hydraulic.Components.Hydrostatic");
convertClass("Physiolibrary.Hydraulic.Hydrostatic2","Physiolibrary.Hydraulic.Components.Hydrostatic2");
convertClass("Physiolibrary.Hydraulic.HydrostaticWithPumpEffect","Physiolibrary.Hydraulic.Components.HydrostaticWithPumpEffect");
convertClass("Physiolibrary.Hydraulic.ElacticBalloon","Physiolibrary.Hydraulic.Components.ElasticBalloon");
convertClass("Physiolibrary.Hydraulic.ElacticBalloon2","Physiolibrary.Hydraulic.Components.ElasticBalloon2");
convertClass("Physiolibrary.Hydraulic.InternalElasticBalloon","Physiolibrary.Hydraulic.Components.InternalElasticBalloon");
convertClass("Physiolibrary.Hydraulic.Inertia","Physiolibrary.Hydraulic.Components.Inertia");
convertClass("Physiolibrary.Hydraulic.FlowMeasure","Physiolibrary.Hydraulic.Sensors.FlowMeasure");
convertClass("Physiolibrary.Hydraulic.PressureMeasure","Physiolibrary.Hydraulic.Sensors.PressureMeasure");
convertClass("Physiolibrary.Hydraulic.InputPump","Physiolibrary.Hydraulic.Sources.InputPump");
convertClass("Physiolibrary.Hydraulic.OutputPump","Physiolibrary.Hydraulic.Sources.OutputPump");
convertClass("Physiolibrary.Hydraulic.UnlimitedVolume","Physiolibrary.Hydraulic.Sources.UnlimitedVolume");
convertClass("Physiolibrary.Hydraulic.PressureFlow","Physiolibrary.Hydraulic.Interfaces.PressureFlow");
convertClass("Physiolibrary.Hydraulic.PositivePressureFlow","Physiolibrary.Hydraulic.Interfaces.PositivePressureFlow");
convertClass("Physiolibrary.Hydraulic.NegativePressureFlow","Physiolibrary.Hydraulic.Interfaces.NegativePressureFlow");
convertClass("Physiolibrary.Hydraulic.OnePort","Physiolibrary.Hydraulic.Interfaces.OnePort");

convertClass("Physiolibrary.Thermal.Conductor","Physiolibrary.Thermal.Components.Conductor");
convertClass("Physiolibrary.Thermal.Conductor2","Physiolibrary.Thermal.Components.Conductor2");
convertClass("Physiolibrary.Thermal.HeatStream","Physiolibrary.Thermal.Components.HeatStream");
convertClass("Physiolibrary.Thermal.HeatOutstream","Physiolibrary.Thermal.Components.HeatOutstream");
convertClass("Physiolibrary.Thermal.IdealRadiator","Physiolibrary.Thermal.Components.IdealRadiator");
convertClass("Physiolibrary.Thermal.HeatAccumulation0","Physiolibrary.Thermal.Components.HeatAccumulation0");
convertClass("Physiolibrary.Thermal.HeatAccumulation","Physiolibrary.Thermal.Components.HeatAccumulation");
convertClass("Physiolibrary.Thermal.HeatFlowConnector","Physiolibrary.Thermal.Interfaces.HeatFlowConnector");
convertClass("Physiolibrary.Thermal.PositiveHeatFlow","Physiolibrary.Thermal.Interfaces.PositiveHeatFlow");
convertClass("Physiolibrary.Thermal.NegativeHeatFlow","Physiolibrary.Thermal.Interfaces.NegativeHeatFlow");
convertClass("Physiolibrary.Thermal.OnePort","Physiolibrary.Thermal.Interfaces.OnePort");

convertClass("Physiolibrary.Osmotic.OsmoticCell","Physiolibrary.Osmotic.Components.OsmoticCell");
convertClass("Physiolibrary.Osmotic.Membrane","Physiolibrary.Osmotic.Components.Membrane");
convertClass("Physiolibrary.Osmotic.Membrane2","Physiolibrary.Osmotic.Components.Membrane2");
convertClass("Physiolibrary.Osmotic.Membrane3","Physiolibrary.Osmotic.Components.Membrane3");
convertClass("Physiolibrary.Osmotic.SolventFlux","Physiolibrary.Osmotic.Components.SolventFlux");
convertClass("Physiolibrary.Osmotic.FlowMeasure","Physiolibrary.Osmotic.Sensors.FlowMeasure");
convertClass("Physiolibrary.Osmotic.SolventInflux","Physiolibrary.Osmotic.Sources.SolventInflux");
convertClass("Physiolibrary.Osmotic.SolventOutflux","Physiolibrary.Osmotic.Sources.SolventOutflux");
convertClass("Physiolibrary.Osmotic.OsmoticFlowConnector","Physiolibrary.Osmotic.Interfaces.OsmoticFlowConnector");
convertClass("Physiolibrary.Osmotic.PositiveOsmoticFlow","Physiolibrary.Osmotic.Interfaces.PositiveOsmoticFlow");
convertClass("Physiolibrary.Osmotic.NegativeOsmoticFlow","Physiolibrary.Osmotic.Interfaces.NegativeOsmoticFlow");
convertClass("Physiolibrary.Osmotic.OnePort","Physiolibrary.Osmotic.Interfaces.OnePort");

convertClass("Physiolibrary.Mixed.IdealGas","Physiolibrary.Mixed.Components.IdealGas");
convertClass("Physiolibrary.Mixed.IdealGas2","Physiolibrary.Mixed.Components.IdealGas2");
convertClass("Physiolibrary.Mixed.PartialPressure","Physiolibrary.Mixed.Components.PartialPressure");
convertClass("Physiolibrary.Mixed.PartialPressure2","Physiolibrary.Mixed.Components.PartialPressure2");





convertClass("Physiolibrary.Blocks.FractConstant","Physiolibrary.Types.Constants.FractionConst");
convertModifiers("Physiolibrary.Blocks.FractConstant",{"k"}  , {"k=%k%*0.01"}, true);
convertClass("Physiolibrary.Blocks.PressureConstant","Physiolibrary.Types.Constants.PressureConst");
convertModifiers("Physiolibrary.Blocks.PressureConstant",{"k"}  , {"k=%k%*133.322387415"}, true);
convertClass("Physiolibrary.Blocks.VolumeConstant","Physiolibrary.Types.Constants.VolumeConst");
convertModifiers("Physiolibrary.Blocks.VolumeConstant",{"k"}  , {"k=%k%*1e-06"}, true);
convertClass("Physiolibrary.Blocks.InitialVolumeConstant","Physiolibrary.Types.Constants.VolumeConst");
convertModifiers("Physiolibrary.Blocks.InitialVolumeConstant",{"k"}  , {"k=%k%*1e-06"}, true);
convertClass("Physiolibrary.Blocks.TemperatureConstant","Physiolibrary.Types.Constants.TemperatureConst");
convertModifiers("Physiolibrary.Blocks.TemperatureConstant",{"k"}  , {"k=%k%+273.15"}, true);
convertClass("Physiolibrary.Blocks.OsmolarityConstant","Physiolibrary.Types.Constants.OsmolarityConst");
convertModifiers("Physiolibrary.Blocks.OsmolarityConstant",{"k"}  , {"k=%k%"}, true);
convertClass("Physiolibrary.Blocks.TimeConstant","Physiolibrary.Types.Constants.TimeConst");
convertModifiers("Physiolibrary.Blocks.TimeConstant",{"k"}  , {"k=%k%*60"}, true);
convertClass("Physiolibrary.Blocks.FlowConstant","Physiolibrary.Types.Constants.VolumeFlowRateConst");
convertModifiers("Physiolibrary.Blocks.FlowConstant",{"k"}  , {"k=%k%*1.6666666666667e-08"}, true);
convertClass("Physiolibrary.Blocks.CaloriesConstant","Physiolibrary.Types.Constants.HeatConst");
convertModifiers("Physiolibrary.Blocks.CaloriesConstant",{"k"}  , {"k=%k%*4.1868"}, true);
convertClass("Physiolibrary.Blocks.ElectrolytesMassConstant","Physiolibrary.Types.Constants.ElectricChargeConst");
convertModifiers("Physiolibrary.Blocks.ElectrolytesMassConstant",{"k"}  , {"k=%k%*96.4853399"}, true);
convertClass("Physiolibrary.Blocks.ComplianceConstant","Physiolibrary.Types.Constants.HydraulicComplianceConst");
convertModifiers("Physiolibrary.Blocks.ComplianceConstant",{"k"}  , {"k=%k%*7.5006157584566e-09"}, true);
convertClass("Physiolibrary.Blocks.CondConstant","Physiolibrary.Types.Constants.HydraulicConductanceConst");
convertModifiers("Physiolibrary.Blocks.CondConstant",{"k"}  , {"k=%k%*1.2501026264094e-10"}, true);
convertClass("Physiolibrary.Blocks.MassFlowConstant_kg","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.MassFlowConstant_kg",{"k"}  , {"k=%k%*1.6666666666667e-02"}, true); //kg/min
convertClass("Physiolibrary.Blocks.MassFlowConstant","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.MassFlowConstant",{"k"}  , {"k=%k%*1.6666666666667e-08"}, true); //mg/min
convertClass(    "Physiolibrary.Blocks.HormoneFlowConstant_uG","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_uG",{"k"}  , {"k=%k%*1.6666666666667e-011"}, true); //ug/min
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_nG","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_nG",{"k"}  , {"k=%k%*1.6666666666667e-014"}, true); //ng/min
convertClass("Physiolibrary.Blocks.HeightConstant","Physiolibrary.Types.Constants.HeightConst");
convertModifiers("Physiolibrary.Blocks.HeightConstant",{"k"}  , {"k=%k%"}, true); //m
convertClass("Physiolibrary.Blocks.ElectrolytesFlowConstant","Physiolibrary.Types.Constants.ElectricCurrentConst");
convertModifiers("Physiolibrary.Blocks.ElectrolytesFlowConstant",{"k"}  , {"k=%k%*1.6080889983333"}, true);
convertClass("Physiolibrary.Blocks.GConstant","Physiolibrary.Types.Constants.AccelerationConst");
convertModifiers("Physiolibrary.Blocks.GConstant",{"k"}  , {"k=%k%"}, true);
convertClass("Physiolibrary.Blocks.CaloriesFlowConstant","Physiolibrary.Types.Constants.HeatFlowRateConst");
convertModifiers("Physiolibrary.Blocks.CaloriesFlowConstant",{"k"}  , {"k=%k%*0.06978"}, true);
convertClass("Physiolibrary.Blocks.SoluteMassConstant","Physiolibrary.Types.Constants.AmountOfSubstanceConst");
convertModifiers("Physiolibrary.Blocks.SoluteMassConstant",{"k"}  , {"k=%k%*0.001"}, true);
convertClass("Physiolibrary.Blocks.FlowConstant_mmol_per_hour","Physiolibrary.Types.Constants.MolarFlowRateConst");
convertModifiers("Physiolibrary.Blocks.FlowConstant_mmol_per_hour",{"k"}  , {"k=%k%*2.777777777778e-7"}, true); //mmol/h
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_mmol","Physiolibrary.Types.Constants.MolarFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_mmol",{"k"}  , {"k=%k%*1.6666666666667e-05"}, true); //mmol/min
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_nmol","Physiolibrary.Types.Constants.MolarFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_nmol",{"k"}  , {"k=%k%*1.6666666666667e-11"}, true); //nmol/min
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_pmol","Physiolibrary.Types.Constants.MolarFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_pmol",{"k"}  , {"k=%k%*1.6666666666667e-14"}, true); //pmol/min
convertClass("Physiolibrary.Blocks.ConcentrationConstant_pg_per_ml","Physiolibrary.Types.Constants.DensityConst");
convertModifiers("Physiolibrary.Blocks.ConcentrationConstant_pg_per_ml",{"k"}  , {"k=%k%*1.0e-9"}, true); //pg/ml=ug/m3


convertClass("Physiolibrary.Blocks.Fract2Constant","ObsoletePhysiolibrary1.Types.Constants.Fract2Constant");
convertModifiers("Physiolibrary.Blocks.Fract2Constant",{"k"},{"k=%k%*0.01"}, true);
convertClass("Physiolibrary.Blocks.ElectrolytesConcentrationConstant_per_l","Physiolibrary.Types.Constants.ConcentrationConst");
convertModifiers("Physiolibrary.Blocks.ElectrolytesConcentrationConstant_per_l",{"k"},{"k=%k%*ChargePerMolecule"});
convertClass("Physiolibrary.Blocks.ConcentrationConstant_uU_per_ml","Physiolibrary.Types.Constants.MassConst");
convertModifiers("Physiolibrary.Blocks.ConcentrationConstant_uU_per_ml",{"k"},{"k=%k%*(1e-6)*MassPerIU"});
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_mU","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_mU",{"k"},{"k=%k%*(1/(60*1000))*MassPerIU"}); //mU/min
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_GU","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_GU",{"k"},{"k=%k%*((1e+09)/60)*MassPerIU"});
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_IU","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_IU",{"k"},{"k=%k%/60*MassPerIU"});
convertClass("Physiolibrary.Blocks.HormoneFlowConstant_U","Physiolibrary.Types.Constants.MassFlowRateConst");
convertModifiers("Physiolibrary.Blocks.HormoneFlowConstant_U",{"k"},{"k=%k%/60*MassPerIU"});



 convertClass("Physiolibrary.Interfaces.BaseModel","Physiolibrary.Icons.Golem");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon","Physiolibrary.Icons.BaseFactorIcon");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon2","Physiolibrary.Icons.BaseFactorIcon2");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon3","Physiolibrary.Icons.BaseFactorIcon3");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon4","Physiolibrary.Icons.BaseFactorIcon4");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon5","Physiolibrary.Icons.BaseFactorIcon5");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon6","Physiolibrary.Icons.BaseFactorIcon6");
 convertClass("Physiolibrary.Interfaces.BaseFactorIcon0","Physiolibrary.Icons.BaseFactorIcon0");
 convertClass("Physiolibrary.Interfaces.ConversionIcon","Physiolibrary.Icons.ConversionIcon");

convertClass("Physiolibrary.Interfaces.RealInput","Modelica.Blocks.Interfaces.RealInput");
convertClass("Physiolibrary.Interfaces.RealInput_","Modelica.Blocks.Interfaces.RealInput");
convertClass("Physiolibrary.Interfaces.RealInput_G","Modelica.Blocks.Interfaces.RealInput");
convertClass("Physiolibrary.Interfaces.RealOutput","Modelica.Blocks.Interfaces.RealOutput");
convertClass("Physiolibrary.Interfaces.RealOutput_","Modelica.Blocks.Interfaces.RealOutput");
convertClass("Physiolibrary.Interfaces.RealOutput_G","Modelica.Blocks.Interfaces.RealOutput");
convertClass("Physiolibrary.Interfaces.BooleanInput","Modelica.Blocks.Interfaces.BooleanInput");
convertClass("Physiolibrary.Interfaces.BooleanOutput","Modelica.Blocks.Interfaces.BooleanOutput");
convertClass("Physiolibrary.Interfaces.SIMO","Modelica.Blocks.Interfaces.SIMO");
convertClass("Physiolibrary.Interfaces.SISO","Modelica.Blocks.Interfaces.SISO");

convertClass("Physiolibrary.Interfaces.BusConnector","Physiolibrary.Types.BusConnector");

convertClass("Physiolibrary.Blocks.Add","Physiolibrary.Blocks.Math.Add");
convertClass("Physiolibrary.Blocks.Inv","Physiolibrary.Blocks.Math.Reciprocal");
convertClass("Physiolibrary.Blocks.Pow","Physiolibrary.Blocks.Math.Pow");
convertClass("Physiolibrary.Blocks.Min","Physiolibrary.Blocks.Math.Min");
convertClass("Physiolibrary.Blocks.MultiProduct","Physiolibrary.Blocks.Math.MultiProduct");
convertClass("Physiolibrary.Blocks.Log10AsEffect","Physiolibrary.Blocks.Math.Log10AsEffect");
convertClass("Physiolibrary.Blocks.deprecated_HomotopyStrongComponentBreaker","Physiolibrary.Blocks.Math.HomotopyStrongComponentBreaker");
convertClass("Physiolibrary.Blocks.Integrator","Physiolibrary.Blocks.Math.Integrator");
convertClass("Physiolibrary.Blocks.IntegratorWithRestart","Physiolibrary.Blocks.Math.Integrator");
convertClass("Physiolibrary.Blocks.Parts","Physiolibrary.Blocks.Math.Parts");
convertClass("Physiolibrary.Blocks.Limiter_","Modelica.Blocks.Nonlinear.Limiter");
convertClass("Physiolibrary.Blocks.SafeDivision","Modelica.Blocks.Math.Division");
